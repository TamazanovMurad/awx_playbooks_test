- name: Dynamic Wallpaper Synchronizer for Linux
  hosts: linux
  gather_facts: yes
  vars:
    wallpaper_url: "https://images.unsplash.com/photo-1483982258113-b72862e6cff6?q=80&w=1740&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fA%3D%3D"
    weather_api: "http://api.openweathermap.org/data/2.5/weather"
    api_key: "ddfb11805a9028aa945f65d181b4d6fb"
    quote_api: "https://zenquotes.io/api/random"
    download_path: "/tmp/wallpaper.jpg"
    final_wallpaper_path: "/usr/share/backgrounds/wallpaper.jpg"

  tasks:
    - name: Install required system packages
      ansible.builtin.apt:
        name: 
          - imagemagick
          - dconf-cli
          - xfconf  # Falls XFCE genutzt wird
        state: present
      become: yes

    - name: Debug Environment Variables
      debug:
        var: ansible_facts.env

    - name: Ensure wallpaper directory exists
      ansible.builtin.file:
        path: "/usr/share/backgrounds"
        state: directory
        mode: "0755"
      become: yes

    - name: Download wallpaper image
      ansible.builtin.get_url:
        url: "{{ wallpaper_url }}"
        dest: "{{ download_path }}"
        mode: "0644"

    - name: Fetch dynamic quote
      ansible.builtin.uri:
        url: "{{ quote_api }}"
        return_content: yes
      register: quote_response
      failed_when: false

    - name: Extract quote text
      set_fact:
        quote_text: "{{ quote_response.json[0]['q'] | default('No quote available') }}"

    - name: Fetch local weather
      ansible.builtin.uri:
        url: "{{ weather_api }}?q=London&appid={{ api_key }}"
        return_content: yes
      register: weather_response
      failed_when: false

    - name: Extract weather description
      set_fact:
        weather_text: "{{ weather_response.json.weather[0].description | default('No weather data') }}"

    - name: Deploy Python script for text overlay
      ansible.builtin.copy:
        dest: "/usr/local/bin/overlay_text.py"
        mode: "0755"
        content: |
          #!/usr/bin/python3
          from PIL import Image, ImageDraw, ImageFont
          import sys

          image_path = sys.argv[1]
          output_path = sys.argv[2]
          text1 = sys.argv[3]
          text2 = sys.argv[4]

          image = Image.open(image_path)
          draw = ImageDraw.Draw(image)
          font = ImageFont.load_default()

          draw.text((10, 20), text1, (255, 255, 255), font=font)
          draw.text((10, 50), text2, (255, 255, 255), font=font)

          image.save(output_path)

    - name: Overlay text onto wallpaper using Python script
      ansible.builtin.command:
        argv:
          - python3
          - "/usr/local/bin/overlay_text.py"
          - "{{ download_path }}"
          - "{{ final_wallpaper_path }}"
          - "Quote: {{ quote_text }}"
          - "Weather: {{ weather_text }}"
      changed_when: true

    - name: Check if GNOME is being used
      set_fact:
        using_gnome: "{{ ansible_facts.env.get('XDG_CURRENT_DESKTOP', '') | lower is search('gnome') }}"

    - name: Debug GNOME detection
      debug:
        msg: "Using GNOME: {{ using_gnome }}"

    - name: Set wallpaper using `community.general.dconf`
      community.general.dconf:
        key: "/org/gnome/desktop/background/picture-uri"
        value: "'file://{{ final_wallpaper_path }}'"
        state: present
      when: using_gnome

    - name: Force `dconf update` to apply changes
      ansible.builtin.command:
        argv:
          - dconf
          - update
      when: using_gnome

    - name: Set wallpaper using `gsettings` (Fallback for GNOME)
      ansible.builtin.command:
        argv:
          - gsettings
          - set
          - org.gnome.desktop.background
          - picture-uri
          - "file://{{ final_wallpaper_path }}"
      when: using_gnome

    - name: Set wallpaper using `xfconf-query` (For XFCE/Kali)
      ansible.builtin.command:
        argv:
          - xfconf-query
          - -c
          - xfce4-desktop
          - -p
          - /backdrop/screen0/monitor0/image-path
          - -s
          - "{{ final_wallpaper_path }}"
      when: not using_gnome
