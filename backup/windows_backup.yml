---
  - name: Backup Windows Hosts
    hosts: windows
    gather_facts: no
    vars:
      restic_password: "kali"
      backup_repo: "local:\\\\192.168.72.131\\backup"  # Korrekte Syntax für UNC-Pfade
      backup_paths:
        - C:\Users\ansible
        - C:\Programme
    tasks:
      - name: Install Chocolatey if not already installed
        win_shell: |
          if (-not (Test-Path "$env:ProgramData\Chocolatey")) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }
        args:
          creates: "C:\\ProgramData\\Chocolatey"
  
      - name: Add Chocolatey to PATH
        win_path:
          elements:
            - "C:\\ProgramData\\chocolatey\\bin"
          state: present
  
      - name: Install Restic
        win_shell: |
          choco install restic -y --force
  
      - name: Ensure repository access with credentials
        win_shell: |
          net use \\192.168.72.131\backup /user:backuper kali
        args:
          executable: cmd  # CMD statt PowerShell für stabile Netzwerkverbindung
  
      - name: Initialize repository (PowerShell-kompatibel)
        win_shell: |
          $env:RESTIC_PASSWORD = "{{ restic_password }}"
          restic -r "{{ backup_repo }}" snapshots 2>$null
          if ($LASTEXITCODE -ne 0) { restic -r "{{ backup_repo }}" init }
        args:
          executable: powershell  # Explizite PowerShell-Ausführung
  
      - name: Run backups
        win_shell: |
          $env:RESTIC_PASSWORD = "{{ restic_password }}"
          restic backup {{ item }} --repo "{{ backup_repo }}"
        loop: "{{ backup_paths }}"