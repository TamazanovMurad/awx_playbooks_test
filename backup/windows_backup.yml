---
  - name: Backup Windows Hosts
    hosts: windows
    gather_facts: no
    vars:
      restic_password: "kali"
      backup_repo: "\\\\192.168.72.131\\backup"
      backup_paths:
        - C:\Users\ansible
        - C:\Programme
    tasks:
      - name: Install Chocolatey if not already installed
        win_shell: |
          if (-not (Test-Path "$env:ProgramData\Chocolatey")) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }
        args:
          creates: "C:\\ProgramData\\Chocolatey"
  
      - name: Add Chocolatey to PATH
        win_path:
          elements:
            - "C:\\ProgramData\\chocolatey\\bin"
          state: present
  
      - name: Install Restic
        win_shell: |
          choco install restic -y --force
  
      - name: Configure backup repository with explicit credentials
        block:
          - name: Add credentials with PowerShell
            win_shell: |
              $securePass = ConvertTo-SecureString "kali" -AsPlainText -Force
              New-PSDrive -Name Z -PSProvider FileSystem -Root "\\192.168.72.131\backup" -Persist -Credential (New-Object System.Management.Automation.PSCredential("backuper", $securePass))
            args:
              executable: powershell
  
          - name: Initialize repository as user
            win_shell: |
              $env:RESTIC_PASSWORD = "{{ restic_password }}"
              restic -r Z:\ init
            become: yes
            become_method: runas
            become_user: backuper
            become_flags: logon_type=new_credentials
            args:
              executable: cmd
  
        always:
          - name: Remove PSDrive
            win_shell: |
              Remove-PSDrive -Name Z -Force
            args:
              executable: powershell
            ignore_errors: yes
  
      - name: Execute backups with user context
        win_shell: |
          $env:RESTIC_PASSWORD = "{{ restic_password }}"
          restic backup {{ item }} --repo "{{ backup_repo }}"
        loop: "{{ backup_paths }}"
        become: yes
        become_method: runas
        become_user: backuper
        become_flags: logon_type=new_credentials
        args:
          executable: cmd