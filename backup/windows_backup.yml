---
- name: Backup Windows Hosts
  hosts: windows
  gather_facts: no
  vars:
    restic_password: "kali"
    backup_repo: "\\\\192.168.72.131\\backup"
    backup_paths:
      - 'C:\Users\ansible'
      - 'C:\Programme'

  tasks:
    - name: Install Chocolatey
      win_shell: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      args:
        creates: "C:\\ProgramData\\Chocolatey"

    - name: Install Restic
      win_shell: choco install restic -y --force
      args:
        creates: "C:\\ProgramData\\chocolatey\\lib\\restic"

    - name: Map network drive persistently
      win_shell: |
        net use "{{ backup_repo }}" /user:backuper kali /persistent:yes
      args:
        executable: cmd
      register: net_result
      failed_when: net_result.rc != 0 and 'error 85' not in net_result.stderr

    - name: Check if repo exists
      win_shell: |
        set "RESTIC_PASSWORD={{ restic_password }}"
        restic -r "{{ backup_repo }}" snapshots
      args:
        executable: cmd
      register: repo_check
      ignore_errors: yes
      changed_when: false

    - name: Initialize repository if missing
      win_shell: |
        set "RESTIC_PASSWORD={{ restic_password }}"
        restic -r "{{ backup_repo }}" init
      args:
        executable: cmd
      when: repo_check.rc != 0

    - name: Execute backups
      win_shell: |
        set "RESTIC_PASSWORD={{ restic_password }}"
        restic backup "{{ item }}" --repo "{{ backup_repo }}"
      loop: "{{ backup_paths }}"
      args:
        executable: cmd