---
- name: Backup Windows Hosts
  hosts: windows
  gather_facts: no
  vars:
    restic_password: "kali"
    backup_repo: "\\\\192.168.72.131\\backup"
    backup_paths:
      - C:\Users\ansible
      - C:\Programme

  tasks:
    - name: Install Chocolatey
      win_shell: |
        if (-not (Test-Path "$env:ProgramData\Chocolatey")) {
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        }
      args:
        creates: "C:\\ProgramData\\Chocolatey"

    - name: Add Chocolatey to PATH
      win_path:
        elements:
          - "C:\\ProgramData\\chocolatey\\bin"
        state: present

    - name: Install specific Restic version
      win_shell: |
        choco install restic --version=0.16.4 -y --force
      args:
        executable: cmd

    - name: Configure Repository
      block:
        - name: Connect SMB Share
          win_shell: |
            net use {{ backup_repo }} /user:backuper kali /persistent:no
          args:
            executable: cmd
          register: net_connect
          failed_when: net_connect.rc not in [0, 2]

        - name: Initialize Repository
          win_shell: |
            $env:RESTIC_PASSWORD = "{{ restic_password }}"
            restic -r "{{ backup_repo }}" init
          args:
            executable: powershell

    - name: Execute Backups
      block:
        - name: Run Backup
          win_shell: |
            $env:RESTIC_PASSWORD = "{{ restic_password }}"
            restic backup "{{ item }}" --repo "{{ backup_repo }}" --verbose
          loop: "{{ backup_paths }}"
          args:
            executable: powershell
          register: backup_results

        - name: Verify Backup
          win_shell: |
            $env:RESTIC_PASSWORD = "{{ restic_password }}"
            restic -r "{{ backup_repo }}" snapshots
          args:
            executable: powershell
          register: snapshots

    - name: Show Results
      debug:
        msg: |
          Snapshots:
          {{ snapshots.stdout_lines | to_nice_json }}