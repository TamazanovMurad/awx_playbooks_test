---
  - name: Backup Windows Hosts
    hosts: windows
    gather_facts: no
    vars:
      restic_password: "kali"
      backup_repo: "smb://backuper:kali@192.168.72.131/backup"
      backup_paths:
        - C:\Users\ansible
        - C:\Programme
    tasks:
      - name: Install Chocolatey if not already installed
        win_shell: |
          if (-not (Test-Path "$env:ProgramData\Chocolatey")) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }
        args:
          creates: "C:\\ProgramData\\Chocolatey"
  
      - name: Add Chocolatey to PATH
        win_path:
          elements:
            - "C:\\ProgramData\\chocolatey\\bin"
          state: present
  
      - name: Install latest Restic using Chocolatey
        win_shell: |
          choco install restic -y --force
  
      - name: Ensure repository is initialized
        win_shell: |
          $env:RESTIC_PASSWORD = "{{ restic_password }}"
          restic -r "{{ backup_repo }}" snapshots 2>$null
          if ($LASTEXITCODE -ne 0) {
            restic -r "{{ backup_repo }}" init
          }
        register: repo_init_result
        ignore_errors: yes
  
      - name: Run Restic Backup
        win_shell: |
          $env:RESTIC_PASSWORD = "{{ restic_password }}"
          restic backup {{ item }} --repo "{{ backup_repo }}"
        loop: "{{ backup_paths }}"
        retries: 3
        delay: 10
        register: backup_result
        until: backup_result.rc == 0