---
- name: Linux Server Backup mit Borg
  hosts: linux
  vars:
    borg_repo: "backuper@192.168.72.131://mnt/backup/linux"
    encryption_passphrase: "kali"
    backup_dirs:
      - /etc
      - /home
      - /var/www
    exclude_patterns:
      - "*.tmp"
      - "*.cache"
      - "/home/*/downloads"

  tasks:
    - name: Python3-apt dependency installieren (raw)
      become: true
      raw: |
        if ! dpkg -l | grep -q python3-apt; then
          apt-get update
          apt-get install -y python3-apt
        fi
      changed_when: false
      args:
        executable: /bin/bash

    - name: Paket-Cache aktualisieren
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: BorgBackup installieren
      become: true
      apt:
        name: borgbackup
        state: present
        force_apt_get: yes
    - name: Backup-Repository initialisieren
      become: false
      command: "borg init --encryption=repokey {{ borg_repo }}"
      args:
        creates: "/mnt/backup/linux/config"
      environment:
        BORG_PASSPHRASE: "{{ encryption_passphrase }}"

    - name: Backup erstellen mit Ausschlussliste
      command: >
        borg create --stats --progress --compression zstd
        --exclude '{{ item }}' {{ borg_repo }}::"{hostname}-{now}" {{ backup_dirs | join(' ') }}
      loop: "{{ exclude_patterns }}"
      environment:
        BORG_PASSPHRASE: "{{ encryption_passphrase }}"
        BORG_RSH: "ssh -i /path/to/linux_backup_key"

    - name: Alte Backups bereinigen
      command: >
        borg prune --keep-daily 7 --keep-weekly 4 --keep-monthly 6 {{ borg_repo }}
      environment:
        BORG_PASSPHRASE: "{{ encryption_passphrase }}"