---
- name: Backup Linux Hosts
  hosts: linux
  gather_facts: no
  vars:
    restic_password: "kali"
    backup_repo: "rest:http://192.168.72.131:8000/repo"  # Beispiel: REST-Server oder NFS-Mount
    backup_paths:
      - /home/ansible
      - /var/www

  tasks:
    - name: Ensure Restic is installed
      apt:
        name: restic
        state: present
      when: ansible_os_family == "Debian"
      become: yes

    - name: Ensure Restic is installed (RedHat)
      yum:
        name: restic
        state: present
      when: ansible_os_family == "RedHat"
      become: yes

    - name: Create .restic.env file with password
      copy:
        content: "export RESTIC_PASSWORD={{ restic_password }}"
        dest: ~/.restic.env
        mode: '0600'
      become: yes

    - name: Source Restic environment variables
      shell: |
        source ~/.restic.env
        echo $RESTIC_PASSWORD
      register: restic_env
      changed_when: false
      become: yes

    - name: Initialize repository if not already initialized
      shell: |
        source ~/.restic.env
        restic -r {{ backup_repo }} snapshots || restic -r {{ backup_repo }} init
      become: yes

    - name: Run backups for specified paths
      shell: |
        source ~/.restic.env
        restic -r {{ backup_repo }} backup {{ item }} --verbose
      loop: "{{ backup_paths }}"
      become: yes

    - name: Verify backups were created
      shell: |
        source ~/.restic.env
        restic -r {{ backup_repo }} snapshots
      register: snapshot_list
      failed_when: snapshot_list.rc != 0
      become: yes

    - name: Debug output of snapshots
      debug:
        msg: "{{ snapshot_list.stdout_lines }}"