---
  # borg-client-setup.yml
  - name: BorgBackup Client Konfiguration
    hosts: linux  # Korrekter Host-Gruppenname
    become: yes
    vars:
      backup_server: 192.168.72.131
      backup_user: backuper
      backup_dir: "/mnt/backup/linux"
      encryption_pass: "kali"
      linux_user: "kali"
  
    tasks:
      - name: Python3-Apt Vorinstallation
        raw: |
          apt-get update && 
          apt-get install -y python3-apt
        changed_when: true  # Wichtig für die Erkennung
  
      - name: BorgBackup installieren
        apt:
          name: borgbackup
          state: present
          update_cache: yes
        register: apt_result
        until: apt_result is succeeded
        retries: 3
        delay: 10
  
      - name: SSH-Schlüsselpaar generieren
        user:
          name: "{{ linux_user }}"
          generate_ssh_key: yes
          ssh_key_bits: 4096
          ssh_key_file: ".ssh/borg_id"
  
      - name: Öffentlichen Schlüssel übertragen
        shell: |
          sshpass -p "kali" ssh-copy-id \
          -i /home/{{ linux_user }}/.ssh/borg_id.pub \
          -o StrictHostKeyChecking=no \
          {{ backup_user }}@{{ backup_server }}
        when: not lookup('file', '/home/'+linux_user+'/.ssh/borg_id.pub', errors='ignore')
  
      - name: Borg-Repository initialisieren
        command: |
          borg init --encryption=repokey \
          {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/{{ ansible_hostname }} \
          -e "{{ encryption_pass }}"
        args:
          creates: "{{ backup_dir }}/{{ ansible_hostname }}/config"  # Korrekter Pfad
        changed_when: false
        ignore_errors: yes
  
      - name: Backup-Skript erstellen
        copy:
          dest: /home/{{ linux_user }}/borg-backup.sh
          mode: 0700
          content: |
            #!/bin/bash
            export BORG_PASSPHRASE='{{ encryption_pass }}'
            export BORG_RSH='ssh -i /home/{{ linux_user }}/.ssh/borg_id'
            
            borg create --stats --compression zstd,3 \
            {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/$(hostname)::'{now:%Y-%m-%d_%H:%M}' \
              /etc \
              /home \
              /var/www \
              --exclude '*.tmp' \
              --exclude '*.cache'
            
            borg prune --keep-daily 7 {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/$(hostname)
  
      - name: Cron-Job einrichten
        cron:
          name: "Tägliches Borg Backup"
          job: "/home/{{ linux_user }}/borg-backup.sh"
          minute: "15"
          hour: "2"
          user: "{{ linux_user }}"