---
- name: Linux Server Backup mit Borg
  hosts: linux
  vars:
    borg_repo: "backuper@192.168.72.131://mnt/backup/linux"
    encryption_passphrase: "kali"
    backup_dirs:
      - /etc
      - /home
      - /var/www
    exclude_patterns:
      - "*.tmp"
      - "*.cache"
      - "/home/*/downloads"

  tasks:
    - name: Ensure python3-apt is installed
      raw: |
        if ! dpkg -s python3-apt >/dev/null 2>&1; then
          apt update && apt install -y python3-apt
        fi
      changed_when: false

    - name: Install necessary dependencies for BorgBackup
      command: apt update && apt install -y python3-pip python3-dev libssl-dev libacl1-dev build-essential pkg-config

    - name: Install BorgBackup using pip
      command: pip3 install borgbackup

    - name: Backup-Repository initialisieren
      become: false
      command: "borg init --encryption=repokey {{ borg_repo }}"
      args:
        creates: "/mnt/backup/linux/config"
      environment:
        BORG_PASSPHRASE: "{{ encryption_passphrase }}"

    - name: Backup erstellen mit Ausschlussliste
      command: >
        borg create --stats --progress --compression zstd
        --exclude '{{ item }}' {{ borg_repo }}::"{hostname}-{now}" {{ backup_dirs | join(' ') }}
      loop: "{{ exclude_patterns }}"
      environment:
        BORG_PASSPHRASE: "{{ encryption_passphrase }}"
        BORG_RSH: "ssh -i /path/to/linux_backup_key"

    - name: Alte Backups bereinigen
      command: >
        borg prune --keep-daily 7 --keep-weekly 4 --keep-monthly 6 {{ borg_repo }}
      environment:
        BORG_PASSPHRASE: "{{ encryption_passphrase }}"