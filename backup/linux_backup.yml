---
  # backup-clients-only.yml
  - name: Configure Linux Clients for Borg Backup
    hosts: linux
    become: yes
    vars:
      backup_server: 192.168.72.131  # Statische IP des Backup-Servers
      backup_user: backuper
      backup_dir: "/mnt/backup/linux"  # Muss auf dem Backup-Server existieren
      encryption_pass: "kali"  # Passphrase für Borg
      linux_user: "kali"  # Lokaler Client-User
  
    tasks:
      - name: Install BorgBackup
        apt:
          name: borgbackup
          state: latest
          update_cache: yes
  
      - name: Generate SSH Keypair für Backup
        user:
          name: "{{ linux_user }}"
          generate_ssh_key: yes
          ssh_key_bits: 2048
          ssh_key_file: ".ssh/borg_key"
  
      - name: Übertrage Public Key zum Backup-Server
        ansible.builtin.shell: |
          sshpass -p "kali" ssh-copy-id \
          -i /home/{{ linux_user }}/.ssh/borg_key.pub \
          -o StrictHostKeyChecking=no \
          {{ backup_user }}@{{ backup_server }}
        when: not lookup('file', '/home/'+linux_user+'/.ssh/borg_key.pub', errors='ignore')
  
      - name: Borg Repository initialisieren
        command: |
          borg init --encryption=repokey \
          {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/{{ ansible_hostname }} \
          -e "{{ encryption_pass }}"
        args:
          creates: "/backup/{{ ansible_hostname }}/config"  # Pfad auf dem Backup-Server!
        changed_when: false
        ignore_errors: yes
  
      - name: Backup-Script erstellen
        copy:
          dest: /home/{{ linux_user }}/backup.sh
          mode: 0755
          content: |
            #!/bin/bash
            export BORG_PASSPHRASE='{{ encryption_pass }}'
            export BORG_RSH='ssh -i /home/{{ linux_user }}/.ssh/borg_key'
            
            borg create --stats --compression zstd {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/$(hostname)::'{now}' \
              /etc \
              /home \
              /var/www \
              --exclude '*.tmp' \
              --exclude '*.cache'
            
            borg prune --keep-daily 7 {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/$(hostname)
  
      - name: Täglichen Cron-Job einrichten
        cron:
          name: "Automatic Borg Backup"
          job: "/home/{{ linux_user }}/backup.sh > /var/log/borg_backup.log 2>&1"
          minute: "0"
          hour: "3"
          user: "{{ linux_user }}"