---
  # borg-client-fix.yml
  - name: BorgBackup Client Setup
    hosts: linux
    become: yes
    vars:
      backup_server: 192.168.72.131
      backup_user: backuper
      backup_dir: "/mnt/backup/linux"
      encryption_pass: "kali"
      linux_user: "kali"
  
    tasks:
      - name: Installiere zwingend Python3-Apt
        raw: |
          apt-get update
          apt-get install -y python3-apt
          test -f /usr/bin/python3 || ln -s /usr/bin/python3.* /usr/bin/python3
        args:
          executable: /bin/bash
        changed_when: true
  
      - name: Setze Python Interpreter
        set_fact:
          ansible_python_interpreter: /usr/bin/python3
  
      - name: Installiere BorgBackup
        apt:
          name: borgbackup
          state: present
          update_cache: yes
  
      - name: Generiere SSH-SchlÃ¼ssel
        user:
          name: "{{ linux_user }}"
          generate_ssh_key: yes
          ssh_key_bits: 4096
          ssh_key_file: ".ssh/borg_key"
  
      - name: Kopiere SSH-Key zum Backup-Server
        shell: |
          sshpass -p "kali" ssh-copy-id \
          -i /home/{{ linux_user }}/.ssh/borg_key.pub \
          -o StrictHostKeyChecking=no \
          {{ backup_user }}@{{ backup_server }}
        when: not lookup('file', '/home/'+linux_user+'/.ssh/borg_key.pub', errors='ignore')
  
      - name: Initialisiere Borg Repository
        command: |
          borg init --encryption=repokey \
          {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/{{ ansible_hostname }} \
          -e "{{ encryption_pass }}"
        args:
          creates: "{{ backup_dir }}/{{ ansible_hostname }}/config"
        changed_when: false
  
      - name: Erstelle Backup-Script
        copy:
          dest: /home/{{ linux_user }}/backup.sh
          mode: 0700
          content: |
            #!/bin/bash
            export BORG_PASSPHRASE='kali'
            export BORG_RSH='ssh -i /home/{{ linux_user }}/.ssh/borg_key'
            
            borg create --stats {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/$(hostname)::'{now}' \
              /etc /home /var/www \
              --exclude '*.tmp' \
              --exclude '*.cache'
            
            borg prune --keep-daily 7 {{ backup_user }}@{{ backup_server }}:{{ backup_dir }}/$(hostname)
  
      - name: Setze Cron-Job
        cron:
          name: "Nightly Borg Backup"
          job: "/home/{{ linux_user }}/backup.sh >/dev/null 2>&1"
          minute: "0"
          hour: "2"
          user: "{{ linux_user }}"