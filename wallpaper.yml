- name: Dynamic Wallpaper Synchronizer
  hosts: windows
  tasks:
    - name: Ensure download directory exists
      file:
        path: "{{ download_dir }}"
        state: directory
      become: yes

    - name: Fetch dynamic quote
      uri:
        url: "https://zenquotes.io/api/random"
        return_content: yes
      register: quote_response
      become: yes

    - name: Fetch local weather
      uri:
        url: "{{ weather_api }}?q={{ ansible_facts.default_ipv4.address }}&appid={{ api_key }}"
        return_content: yes
      register: weather_response
      become: yes

    - name: Download wallpaper image
      uri:
        url: "{{ wallpaper_url }}"
        dest: "{{ download_dir }}/wallpaper.jpg"
      register: wallpaper_download
      become: yes
      when: quote_response.status_code == 200 and weather_response.status_code == 200

    - name: Create and apply wallpaper
      shell: |
        convert {{ download_dir }}/wallpaper.jpg \
        -gravity SouthEast -pointsize 30 -draw "text 10,10 'Weather: {{ weather_response.json.weather[0].description }}'" \
        -draw "text 10,50 'Quote: {{ quote_response.json[0].q }}'" {{ download_dir }}/final_wallpaper.jpg
        powershell -Command "Add-Type -TypeDefinition '@
          using System.Drawing;
          using System.Windows.Forms;
          public class Wallpaper {
            public static void Set(string path) {
              SystemParametersInfo(SPI_SETDESKWALLPAPER, 0, path, SPIF_UPDATEINIFILE | SPIF_SENDCHANGE);
            }
          }
        '@; Wallpaper::Set('{{ download_dir }}/final_wallpaper.jpg');"
      args:
        creates: "{{ download_dir }}/final_wallpaper.jpg"
      when: ansible_os_family != "Windows"

    - name: Apply wallpaper on Windows
      win_shell: |
        powershell -Command "
        Invoke-WebRequest -Uri {{ wallpaper_url }} -OutFile {{ download_dir }}/wallpaper.jpg;
        Add-Type -TypeDefinition '@
          using System.Drawing;
          using System.Windows.Forms;
          public class Wallpaper {
            public static void Set(string path) {
              SystemParametersInfo(SPI_SETDESKWALLPAPER, 0, path, SPIF_UPDATEINIFILE | SPIF_SENDCHANGE);
            }
          }
        '@;
        Wallpaper::Set('{{ download_dir }}/wallpaper.jpg');
        "
      args:
        creates: "{{ download_dir }}/wallpaper.jpg"
      when: ansible_os_family == "Windows"
