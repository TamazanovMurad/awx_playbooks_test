---
- name: Dynamic Wallpaper Synchronizer
  hosts: all
  gather_facts: no  # Vermeidet Python-Abhängigkeit für die Faktsammlung
  vars:
    wallpaper_url: "https://imgur.com/z8KCBPz"
    weather_api: "http://api.openweathermap.org/data/2.5/weather"
    api_key: "ddfb11805a9028aa945f65d181b4d6fb"
    quote_api: "https://api.quotable.io/random"
    download_path: "C:\\Temp\\wallpaper.jpg"

  tasks:
    - name: Ensure download directory exists
      win_file:
        path: "C:\\Temp"
        state: directory

    - name: Fetch dynamic quote
      win_uri:
        url: "{{ quote_api }}"
        return_content: yes
      register: quote_response

    - name: Fetch local weather
      win_uri:
        url: "{{ weather_api }}?q=London&appid={{ api_key }}"  # Ort ggf. anpassen
        return_content: yes
      register: weather_response

    - name: Download wallpaper image
      win_uri:
        url: "{{ wallpaper_url }}"
        dest: "{{ download_path }}"
        return_content: no

    - name: Create and apply wallpaper
      win_shell: |
        $imagePath = "{{ download_path }}"
        $quote = "{{ quote_response.json.content }}"
        $weather = "{{ weather_response.json.weather[0].description }}"
        Add-Type -TypeDefinition @"
        using System.Drawing;
        using System.Drawing.Imaging;
        public class WallpaperGenerator {
          public static void AddText(string path, string quote, string weather) {
            using (var bitmap = new Bitmap(path)) {
              using (Graphics g = Graphics.FromImage(bitmap)) {
                Font drawFont = new Font("Arial", 16);
                SolidBrush drawBrush = new SolidBrush(Color.White);
                g.DrawString($"Quote: {quote}", drawFont, drawBrush, new PointF(10, 10));
                g.DrawString($"Weather: {weather}", drawFont, drawBrush, new PointF(10, 50));
                bitmap.Save(path, ImageFormat.Jpeg);
              }
            }
          }
        }
        "@
        [WallpaperGenerator]::AddText($imagePath, $quote, $weather)
        RUNDLL32.EXE user32.dll, UpdatePerUserSystemParameters
